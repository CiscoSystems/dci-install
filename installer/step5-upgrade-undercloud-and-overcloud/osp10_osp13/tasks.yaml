---
# Pre upgrade step required by this automation to disable unsubscription from
# RHEL during the upgrade.

- name: Write out environment file to disable rhel registration deletion
  copy:
    dest: /home/stack/environments/no_delete_rhelsub.yaml
    content: |
      parameter_defaults:
        DeleteOnRHELUnregistration: false

- name: Write out json converter template
  copy:
    dest: /home/stack/templates/json_converter.yaml
    content: |
      heat_template_version: 2015-04-30

      parameters:
        data:
          type: json

      resources: {}

      outputs:
        converted:
          description: Json data
          value: { get_param: data }

- name: Write out replacement node extra config template for nexus/ucsm ml2
  copy:
    dest: /home/stack/templates/new_nexus_ucsm_extra_config.yaml
    content: |
      heat_template_version: 2015-04-30

      description: Configure hieradata for Network Cisco configuration

      parameters:
        # Parameters passed from the parent template
        servers:
          type: json

        # extra parameters passed via parameter_defaults
        NetworkUCSMIp:
          type: string
          description: Cisco UCSM IP
          default: 127.0.0.1
        NetworkUCSMUsername:
          type: string
          description: Cisco UCSM username
          default: admin
        NetworkUCSMPassword:
          type: string
          description: Cisco UCSM password
          default: ''
          hidden: true
        NetworkUCSMHostList:
          type: string
          description: >
            Mac address to service profile mapping for UCSM-controlled hosts
            The format is
            '<host1-mac>:<profile>, <host2-mac>:<profile>, ...'
          default: ''
        NetworkUCSMSupportedPciDevs:
          type: string
          description: Cisco UCSM SR-IOV and VM-FEX vendors supported
          default: ''
        NetworkUCSMHttpsVerify:
          type: boolean
          description: >
            Enabling/disabling UCS Manager SSL certificate verification
          default: true
        NetworkUCSMSpTemplateList:
          type: string
          description: Host to Service Profile Template mapping with its path
          default: ''
        NetworkUCSMVnicTemplateList:
          type: string
          description: >
              Neutron physical network to vNIC Template mapping with its path
          default: ''
        NetworkNexusConfig:
          type: json
          description: Nexus switch configuration
          default: {}
        NetworkNexusManagedPhysicalNetwork:
          type: string
          description: The name of the physical_network
          default: ''
        NetworkNexusVlanNamePrefix:
          type: string
          description:  >
            This configuration item is OBSOLETE.
            A short prefix to prepend to the VLAN name
          default: 'q-'
        NetworkNexusSviRoundRobin:
          type: boolean
          description:  >
            This configuration item is OBSOLETE.
            A flag to enable round robin scheduling
          default: false
        NetworkNexusProviderVlanNamePrefix:
          type: string
          description:  >
            This configuration item is OBSOLETE.
            A short prefix to prepend to the VLAN name.
          default: 'p-'
        NetworkNexusPersistentSwitchConfig:
          type: string
          description: >
            This config item will be deprecated.
            To make Nexus device persistent.
          default: false
        NetworkNexusNeverCacheSshConnection:
          type: string
          description: >
            This config item will be deprecated.
            Prevent Cache of ssh connection
          default: false
        NetworkNexusSwitchHeartbeatTime:
          type: number
          description: >
            Time interval to check the state of the Nexus device. The units of this
            object are seconds.  Setting this object to a value of 0 disables the
            replay feature.
          default: 30
        NetworkNexusSwitchReplayCount:
          type: number
          description: >
            This configuration item is OBSOLETE.  The Nexus driver replay behavior
            is to continue to attempt to connect to the down Nexus device with a
            period equal to the heartbeat time interval.  This was previously the
            Number of times to attempt config replay.
          default: 3
        NetworkNexusCfgDriver:
          type: string
          description: >
            This will be deprecated.  Lower-level configuration driver which sends
            commands to the Nexus Device.  Choices are 'restapi' or 'ncclient'
            where the latter is being deprecated. So there is no longer a need for
            this variable.
          default: 'restapi'
        NetworkNexusProviderVlanAutoCreate:
          type: boolean
          description: A flag whether to manage the creation and removal of VLANs
          default: true
        NetworkNexusProviderVlanAutoTrunk:
          type: boolean
          description: A flag whether to manage the trunk ports on the Nexus
          default: true
        NetworkNexusVxlanGlobalConfig:
          type: boolean
          description: A flag whether to manage the VXLAN global settings
          default: true
        NetworkNexusHostKeyChecks:
          type: boolean
          description: >
            This config item will be deprecated.  It enables strict host key
            checks when connecting to Nexus switches
          default: false
        NetworkNexusVxlanVniRanges:
          type: string
          description: VXLAN Network IDs that are available for tenant network
          default: ''
        NetworkNexusVxlanMcastRanges:
          type: string
          description: Multicast groups for the VXLAN interface.
          default: ''

      resources:
        CollectMacHostnames:
          type: OS::TripleO::MacHostname
          properties:
            servers: {get_param: servers}

        ProcessNexusAndUCSMMappings:
          type: OS::Heat::SoftwareConfig
          properties:
            group: script
            inputs:
              - name: controller_mappings
              - name: compute_mappings
              - name: orig_nexus_mapping
              - name: orig_ucsm_mapping
            config: |
              #!/bin/python
              import json
              import os
              import ast

              heat_outputs_path = os.environ.get("heat_outputs_path")
              controller_mappings = os.environ.get("controller_mappings")
              compute_mappings = os.environ.get("compute_mappings")
              orig_nexus_mapping = os.environ.get("orig_nexus_mapping")
              orig_ucsm_mapping = os.environ.get("orig_ucsm_mapping")

              controller_mappings = ast.literal_eval(controller_mappings)
              compute_mappings = ast.literal_eval(compute_mappings)

              if orig_nexus_mapping:
                  orig_nexus_mapping = ast.literal_eval(orig_nexus_mapping)

              # Take mapping of host to macs and convert them to a mac to host
              # mapping
              mac2host = {}
              for mappings in [controller_mappings, compute_mappings]:
                  for host, data in mappings.items():
                      host_macs = data.strip().split()
                      for mac in host_macs[1:]:
                          mac2host[mac] = host_macs[0]

              for nexus in orig_nexus_mapping:
                  server_mapping = {}
                  for mac, switchports in nexus['servers']:
                      mac = mac.lower()
                      if mac not in mac2host:
                          continue
                      server = mac2host[mac]
                      if server in server_mapping:
                          server_mapping[server]['ports'] += "," + switchports['ports']
                      else:
                          server_mapping[server]['ports'] = switchports
                  nexus['servers'] = server_mapping

              with open('%s.%s' % (heat_outputs_path, "nexus_mappings"), 'w') as out:
                  out.write(json.dumps(orig_nexus_mappings))
              with open('%s.%s' % (heat_outputs_path, "ucsm_mappings"), 'w') as out:
                  out.write(json.dumps(ucsm_mappings))


- name: Write out networking-cisco specific config environment resources
  copy:
    dest: /home/stack/environments/networking-cisco-config-resources-preupgrade.yaml
    content: |
      resource_registry:
        OS::TripleO::NodeUserData: /usr/share/openstack-tripleo-heat-templates/firstboot/os-net-config-mappings.yaml
        OS::TripleO::ControllerExtraConfigPre: /home/stack/templates/controller_extra_config_prepuppet.yaml
        OS::TripleO::AllNodesExtraConfig:  OS::Heat::None
        OS::TripleO::MacHostname: /usr/share/openstack-tripleo-heat-templates/extraconfig/all_nodes/mac_hostname.yaml
        OS::TripleO::StringToMap: /home/stack/templates/json_converter.yaml

- name: Update the current plan using your original openstack overcloud deploy command
  shell: |
    source /home/stack/stackrc
    openstack overcloud deploy --update-plan-only --templates \
        -e /home/stack/environments/overcloud-config.yaml \
        -e /usr/share/openstack-tripleo-heat-templates/environments/network-isolation.yaml \
        -e /usr/share/openstack-tripleo-heat-templates/environments/net-single-nic-with-vlans.yaml \
        -e /home/stack/environments/networking-cisco-config-resources-preupgrade.yaml \
        -e /home/stack/environments/networking-cisco-config-params.yaml \
        -e /home/stack/environments/no_delete_rhelsub.yaml \
        -e /home/stack/environments/rhel_sub_config.yaml \
        -e /usr/share/openstack-tripleo-heat-templates/extraconfig/pre_deploy/rhel-registration/rhel-registration-resource-registry.yaml \
        --ntp-server 1.ntp.esl.cisco.com

- name: Install expect package
  yum:
    name: expect
    state: latest
  become: true

- name: Perform a stack update to ensure that the rhelsub changes are picked up
  shell: |
    set timeout -1
    set end -1;

    spawn /bin/bash -c "source /home/stack/stackrc && openstack overcloud update stack -i overcloud"

    while {$end == -1} {
       expect {
           "Breakpoint reached" { send -- "\r" }
           "update finished with status COMPLETE" { set end [ expr $end + 1 ] }
           "update finished with status FAILED" { set end [ expr $end + 2 ] }
       }
    }

    exit $end
  args:
    executable: /usr/bin/expect


# 3.1. UPGRADING THE UNDERCLOUD TO OPENSTACK PLATFORM 11

- name: Disable the OSP10 repo
  rhsm_repository:
    name: rhel-7-server-openstack-10-rpms
    state: disabled
  become: true

- name: Enable the OSP11 repo
  rhsm_repository:
    name: rhel-7-server-openstack-11-rpms
    state: present
  become: true

- name: Stop the main OpenStack Platform services
  systemd:
    state: stopped
    name: "{{ item }}"
  with_items:
    - 'openstack-*'
    - 'neutron-*'
    - httpd
  become: true

- name: Upgrade the director's main packages
  yum:
    name: '{{ item }}'
    state: latest
    update_cache: true
  with_items:
    - instack-undercloud
    - openstack-puppet-modules
    - openstack-tripleo-common
    - python-tripleoclient
  become: true

- name: Upgrade the undercloud
  shell: openstack undercloud upgrade

# 3.2. UPGRADING THE UNDERCLOUD TO OPENSTACK PLATFORM 12

- name: Disable the OSP11 repo
  rhsm_repository:
    name: rhel-7-server-openstack-11-rpms
    state: disabled
  become: true

- name: Enable the OSP12 repo
  rhsm_repository:
    name: rhel-7-server-openstack-12-rpms
    state: present
  become: true

- name: Upgrade the director's main packages
  yum:
    name: python-tripleoclient
    state: latest
    update_cache: true
  become: true

- name: Upgrade the undercloud
  shell: openstack undercloud upgrade

# 3.3. UPGRADING THE UNDERCLOUD TO OPENSTACK PLATFORM 13

- name: Disable the OSP12 repo
  rhsm_repository:
    name: rhel-7-server-openstack-12-rpms
    state: disabled
  become: true

- name: Enable the OSP13 repo
  rhsm_repository:
    name: rhel-7-server-openstack-13-rpms
    state: present
  become: true

- name: Upgrade the director's main packages
  yum:
    name: python-tripleoclient
    state: latest
    update_cache: true
  become: true

- name: Upgrade the undercloud
  shell: openstack undercloud upgrade

- name: Reboot the undercloud to update the system
  shell: "sleep 5 && reboot"
  async: 1
  poll: 0
  become: true

- name: Wait for director to finish rebooting
  wait_for_connection:
    connect_timeout: 20
    sleep: 5
    delay: 20
    timeout: 600

# 4.5. USING THE UNDERCLOUD AS A LOCAL REGISTRY

- name: Create a template to upload the the images to the local registry
  shell: |
    source /home/stack/stackrc
    openstack overcloud container image prepare \
    --namespace=registry.access.redhat.com/rhosp13 \
    --push-destination={{ undercloud_local_ip | ipaddr('address') }}:8787 \
    --prefix=openstack- \
    --tag-from-label {version}-{release} \
    --output-env-file=/home/stack/templates/overcloud_images.yaml \
    --output-images-file /home/stack/local_registry_images.yaml \
    --exclude neutron-server
  when: dci_base_ip is not defined

- name: Create a template to upload the the images to the local registry
  shell: |
    source /home/stack/stackrc
    openstack overcloud container image prepare \
    --namespace={{ dci_base_ip }}:5000/rhosp13 \
    --push-destination={{ undercloud_local_ip | ipaddr('address') }}:8787 \
    --prefix=openstack- \
    --output-env-file=/home/stack/templates/overcloud_images.yaml \
    --output-images-file /home/stack/local_registry_images.yaml \
    --exclude neutron-server
  when: dci_base_ip is defined

- name: Pull the container images to the undercloud
  shell: |
    source /home/stack/stackrc
    openstack overcloud container image upload \
    --config-file /home/stack/local_registry_images.yaml \
    --verbose
  become: true

# Custom for getting networking-cisco into the neutron-server container

- name: Create the template for the neutron server images
  copy:
    dest: /usr/share/tripleo-common/container-images/overcloud_containers.yaml.j2
    backup: true
    content: |
      {% raw %}
      container_images_template:

      - imagename: "{{namespace}}/openstack-neutron-server-networking-cisco-plugin:{{tag}}"
        params:
        - DockerNeutronApiImage
        - DockerNeutronConfigImage
        services:
        - OS::TripleO::Services::NeutronApi
        - OS::TripleO::Services::NeutronDhcpAgent
        - OS::TripleO::Services::NeutronMetadataAgent
        - OS::TripleO::Services::NeutronServer
      {% endraw %}
  register: overcloud_containers
  become: true

- block:
    - name: Create a template to upload the neutron images to the local registry
      shell: |
        source /home/stack/stackrc
        openstack overcloud container image prepare \
        --namespace=registry.hub.docker.com/bradleyjones \
        --push-destination={{ undercloud_local_ip | ipaddr('address') }}:8787 \
        --tag latest \
        --output-env-file=/home/stack/templates/overcloud_images_neutron.yaml \
        --output-images-file /home/stack/local_registry_images_neutron.yaml

    - name: Pull the neutron container images to the undercloud
      shell: |
        source /home/stack/stackrc
        openstack overcloud container image upload \
        --config-file /home/stack/local_registry_images_neutron.yaml \
        --verbose
      become: true
  always:
    - name: Restore the orignal overcloud_containers template
      copy:
        dest: /usr/share/tripleo-common/container-images/overcloud_containers.yaml.j2
        src: "{{ overcloud_containers.backup_file }}"
        remote_src: true
      become: true

# CHAPTER 5. PREPARING FOR THE OVERCLOUD UPGRADE

# 5.6. DEPRECATED CLI OPTIONS

- name: Write out overcloud misc overcloud config changes
  copy:
    dest: /home/stack/environments/node-info.yaml
    content: |
      parameter_defaults:
        ControllerCount: {{ overcloud_control_scale }}
        ComputeCount: {{ overcloud_compute_scale }}
        CephStorageCount: {{ overcloud_ceph_storage_scale }}
        BlockStorageCount: {{ overcloud_block_storage_scale }}
        ObjectStorageCount: {{ overcloud_swift_storage_scale }}

# 5.11. CONFIGURING REGISTRATION FOR FAST FORWARD
# UPGRADES

- name: Write out custom ffu repo script based on guide
  copy:
    dest: /home/stack/environments/custom_repositories_script.yaml
    content: |
      parameter_defaults:
        FastForwardCustomRepoScriptContent: |
          #!/bin/bash
          set -e
          case $1 in
            ocata)
              subscription-manager repos --disable=rhel-7-server-openstack-10-rpms
              subscription-manager repos --enable=rhel-7-server-openstack-11-rpms
              ;;
            pike)
              subscription-manager repos --disable=rhel-7-server-openstack-11-rpms
              subscription-manager repos --enable=rhel-7-server-openstack-12-rpms
              ;;
            queens)
              subscription-manager repos --disable=rhel-7-server-openstack-12-rpms
              subscription-manager repos --enable=rhel-7-server-openstack-13-rpms
              subscription-manager repos --disable=rhel-7-server-rhceph-2-mon-rpms
              subscription-manager repos --enable=rhel-7-server-rhceph-3-mon-rpms
              subscription-manager repos --disable=rhel-7-server-rhceph-2-tools-rpms
              subscription-manager repos --enable=rhel-7-server-rhceph-3-tools-rpms
              ;;
            *)
              echo "unknown release $1" >&2
              exit 1
          esac

# CHAPTER 6. UPGRADING THE OVERCLOUD

# 6.1. PERFORMING THE FAST FORWARD UPGRADE OF THE
# OVERCLOUD

- name: Run the fast forward upgrade preparation command
  shell: |
    source /home/stack/stackrc
    openstack overcloud ffwd-upgrade prepare --yes --templates \
        -e /home/stack/environments/node-info.yaml \
        -e /home/stack/templates/overcloud_images.yaml \
        -e /home/stack/templates/overcloud_images_neutron.yaml \
        -e /usr/share/openstack-tripleo-heat-templates/environments/network-isolation.yaml \
        -e /usr/share/openstack-tripleo-heat-templates/environments/net-bond-with-vlans.yaml \
        -e /home/stack/environments/networking-cisco-config.yaml \
        -e /home/stack/environments/custom_repositories_script.yaml \
        --ntp-server 1.ntp.esl.cisco.com

- name: Run the fast forward upgrade command
  shell: |
    source /home/stack/stackrc
    openstack overcloud ffwd-upgrade run --yes

# 6.2. UPGRADING ALL CONTROLLER NODES

- name: Run the upgrade command
  shell: |
    source /home/stack/stackrc
    openstack overcloud upgrade run --roles Controller --skip-tags validation

# 6.4. UPGRADING ALL COMPUTE NODES

- name: Run the upgrade command
  shell: |
    source /home/stack/stackrc
    openstack overcloud upgrade run --roles Compute --skip-tags validation

# 6.6. FINALIZING THE FAST FORWARD UPGRADE

- name: Run the fast forward upgrade finalization command
  shell: |
    source /home/stack/stackrc
    openstack overcloud ffwd-upgrade converge --yes --templates \
        -e /home/stack/environments/node-info.yaml \
        -e /home/stack/templates/overcloud_images.yaml \
        -e /home/stack/templates/overcloud_images_neutron.yaml \
        -e /usr/share/openstack-tripleo-heat-templates/environments/network-isolation.yaml \
        -e /usr/share/openstack-tripleo-heat-templates/environments/net-bond-with-vlans.yaml \
        -e /home/stack/environments/networking-cisco-config.yaml \
        -e /home/stack/environments/custom_repositories_script.yaml \
        --ntp-server 1.ntp.esl.cisco.com

# CHAPTER 7. EXECUTING POST UPGRADE STEPS

# 7.3. UPGRADING THE OVERCLOUD IMAGES

- name: Unpack the overcloud images into stack
  unarchive:
    remote_src: true
    src: "{{ item }}"
    dest: /home/stack/images
  with_items:
    - /usr/share/rhosp-director-images/overcloud-full-latest-13.0.tar
    - /usr/share/rhosp-director-images/ironic-python-agent-latest-13.0.tar

- name: Upload overcloud images to the undercloud
  shell: |
    source /home/stack/stackrc
    openstack overcloud image upload --update-existing --image-path /home/stack/images/
    openstack overcloud node configure $(openstack baremetal node list -c UUID -f value)


# TODO(sambetts) Add code to reenable unsubscription from RHEL on delete
