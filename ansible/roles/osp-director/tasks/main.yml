---

- name: Set rhsm proxy host
  lineinfile: dest=/etc/rhsm/rhsm.conf regexp="^proxy_hostname " insertafter="^\[server\] " line="proxy_hostname = {{ proxy_host }}"
  when: use_yum_proxy

- name: Set rhsm proxy port
  lineinfile: dest=/etc/rhsm/rhsm.conf regexp="^proxy_port " insertafter="^\[server\] " line="proxy_port = {{ proxy_port }}"
  when: use_yum_proxy

- name: Registering RHEL
#  environment: proxy_env
  redhat_subscription: username={{ rhel_username }}
                       pool={{ rhel_pool }}
                       password={{ rhel_password }}

- name: Check if attached to pool
#  environment: proxy_env
  shell: 'subscription-manager list --consumed | grep {{ rhel_pool }} || subscription-manager attach --pool={{ rhel_pool }}'
  ignore_errors: true
  register: rhel_pool_check

- name: RHEL attach pool
#  environment: proxy_env
  shell: subscription-manager attach --pool={{ rhel_pool }}
  when: rhel_pool_check|failed

- name: Set RHEL Channels
#  environment: proxy_env
  shell: subscription-manager repos --enable=rhel-7-server-rpms --enable=rhel-7-server-optional-rpms --enable=rhel-7-server-extras-rpms

#- name: debug
#  environment: proxy_env
#  shell: curl -o /etc/yum.repos.d/{{ item.name }} {{ item.url }}
#  with_items: "{{ yum_repos }}"

# doesn't look like get_url is correctly using the proxy for ftp all the time (though some times it is)

- name: Setup Yum Repos
  environment: proxy_env
  get_url: url={{ item.url }} dest=/etc/yum.repos.d/{{ item.name }} force=true
  with_items: "{{ yum_repos }}"

# set proxy via kickstart
- name: Set yum proxy
  shell: 'grep -q "proxy=" /etc/yum.conf || echo "proxy={{ proxy }}" >> /etc/yum.conf'
  when: use_yum_proxy

- name: Set yum timeout
  shell: 'grep -q "timeout=" /etc/yum.conf || echo "timeout={{ yum_timeout }}" >> /etc/yum.conf'

- name: yum update (the world)
  yum: name=* state=latest update_cache=yes

#- name: Install chrony
#  yum: name=chrony
#
#- name: Enable chronyd service
#  service: name=chronyd state=started enabled=yes

- name: Install python-rdomanager-oscplugin
  yum: name=python-rdomanager-oscplugin

- name: Create Stack user
  # password=password
  user: name=stack groups=wheel append=yes password=$6$rounds=100000$AZq2DbEdgByHTu8s$J20qsZT3AcxDB47N.Qoscv6aI91pIsI7pH.yPfMXwDOhgOdf7bqVqoPqexA9mKJuC.kXArdth67Q7AbN8416g.

- name: Check if stack user is in sudo
  stat: path=/etc/sudoers.d/stack
  register: stack_in_sudo

- name: Add Stack user to sudo
  shell: 'echo "Defaults:nova !requiretty\nstack ALL=(root) NOPASSWD:ALL" | tee -a /etc/sudoers.d/stack && chmod 0440 /etc/sudoers.d/stack'
  when: not stack_in_sudo.stat.exists

- name: Disable requiretty
  lineinfile: dest=/etc/sudoers state=absent regexp="^Defaults\ *requiretty"

- name: Add stack user to sudo
  copy:
    content: |
      stack ALL=(root) NOPASSWD:ALL
    dest: /etc/sudoers.d/stack
    mode: 0440


#- name: stack user sudo defaults
#  lineinfile: line="Defaults:nova !requiretty" dest="/etc/sudoers.d/stack" create=yes
#
#- name: stack sudoers
#  lineinfile: line="stack ALL=(root) NOPASSWD:ALL" dest="/etc/sudoers.d/stack" create=no

#- name: Set Proxy
#  shell: 'grep -q {{ item.key }} ~stack/.bash_profile || echo "export {{ item.key }}={{ item.value }}" >> ~stack/.bash_profile'
#  with_dict: "{{ proxy_env }}"

#- name: Setup answer file
- name:  Writing undercloud.conf
  template: src=undercloud.conf dest=/home/stack/undercloud.conf owner=stack group=stack

- name: Install the Undercloud
  sudo_user: stack
  environment: proxy_env
  shell: cd /home/stack && openstack undercloud install
  # up to 4 hours poll every minute
  async: 14400
  poll: 60
  when: deploy_undercloud

- name: Adjust Allowed hosts
  lineinfile: line="\g<1>', '{{ director_node_ssh_ip }}' ]" dest=/etc/openstack-dashboard/local_settings backrefs=yes regexp="^(ALLOWED_HOSTS = .*localhost).*"
  register: update_allowed_hosts

- name: Restart HTTPD
  service: name=httpd state=restarted
  when: update_allowed_hosts|changed
