[DEFAULT]
skip = False
ignore_errors = false

proxy_env = {}

testbed_vlan = 3000
storage_vlan = 3001
storage_mgmt_vlan = 3002
tenant_network_vlan = 3003
overcloud_external_vlan = 3008
undercloud_vlan = 3009

yum_timeout = 120

yum_repos = [{ 'name': 'rhel-7-server-openstack-7.0-director-rpms.repo', 'url': 'http://memory.cisco.com/osp7/ftp-mirror/rhel-7-server-openstack-7.0-director-rpms.repo' },
             { 'name': 'rhel-7-server-openstack-7.0-rpms.repo', 'url':  'http://memory.cisco.com/osp7/ftp-mirror/rhel-7-server-openstack-7.0-rpms.repo' },
             { 'name': 'rhel-7-server-rpms.repo', 'url': 'http://memory.cisco.com/osp7/ftp-mirror/rhel-7-server-rpms.repo' },
             { 'name': 'rhel-7-server-optional-rpms.repo', 'url': 'http://memory.cisco.com/osp7/ftp-mirror/rhel-7-server-optional-rpms.repo' },
             { 'name': 'rhel-7-server-extras-rpms.repo', 'url': 'http://memory.cisco.com/osp7/ftp-mirror/rhel-7-server-extras-rpms.repo' }
            ]

cert_yum_repos = [{ 'name': 'rhel-7-server-cert-rpms.repo', 'url': 'http://memory.cisco.com/osp7/ftp-mirror/rhel-7-server-cert-rpms.repo' },
                  { 'name': 'rhel-7-server-openstack-7.0-rpms.repo', 'url':  'http://memory.cisco.com/osp7/ftp-mirror/rhel-7-server-openstack-7.0-rpms.repo' },
                  { 'name': 'rhel-7-server-rpms.repo', 'url': 'http://memory.cisco.com/osp7/ftp-mirror/rhel-7-server-rpms.repo' },
                  { 'name': 'rhel-7-server-optional-rpms.repo', 'url': 'http://memory.cisco.com/osp7/ftp-mirror/rhel-7-server-optional-rpms.repo' },
                  { 'name': 'rhel-7-server-extras-rpms.repo', 'url': 'http://memory.cisco.com/osp7/ftp-mirror/rhel-7-server-extras-rpms.repo' }
                 ]

image_base_url = http://memory.cisco.com/osp7/rh-images/7.1-ga/
disk_images = [{ 'url': '%(image_base_url)s/deploy-ramdisk-ironic.tar', 'name': 'deploy-ramdisk-ironic.tar' },
              { 'url': '%(image_base_url)s/discovery-ramdisk.tar', 'name': 'discovery-ramdisk.tar' },
              { 'url': '%(image_base_url)s/overcloud-full.tar', 'name': 'overcloud-full.tar' }]

physical_ports = []
physical_ports_external = []

hack_in_undercloud_gateway_ip = true

nfs_server_daemon = nfs-server

nfs_exports = [ "/export/cinder *(rw,sync,no_root_squash)", "/export/glance *(rw,sync,no_root_squash)" ]

node_discovery = true
deploy_overcloud = true
deploy_undercloud = true
override_qcow = true

osp_use_partner_repo = true

;overcloud_full_override_url = http://memory.cisco.com/osp7/images/testing/overcloud-full.qcow2
;overcloud_full_override_sha256sum = e9019072e1b7cc4d11ff7e3d89099508e5b1a37551714312b771e67c72990bea

overcloud_control_scale = 1
overcloud_compute_scale = 1
overcloud_ceph_storage_scale = 0
overcloud_block_storage_scale = 0
overcloud_swift_storage_scale = 0

dns_server_1 = 171.70.168.183

neutron_mechanism_drivers = openvswitch,cisco_nexus

# heat patches for undercloud
puppet_neutron_ref = refs/changes/81/197181/17

heat_templates_ref_1 = refs/changes/50/226550/2
# https://review.openstack.org/#/c/226550 - Remove nameserver lookup dependency from Cisco ML2 CollectMacConfig.

puppet_elements_ref = refs/changes/72/188772/1


rpms_for_image = "http://memory.cisco.com/osp7/rpms/python-networking-cisco-2015.1.0-5.el7ost.noarch.rpm"
patch_infos = [ {'name': 'networking-cisco',
              'path': '/usr/lib/python2.7/site-packages/networking_cisco',
              'ref': 'refs/changes/96/248996/1' },
              {'name': 'neutron',
               'path': '/usr/lib/python2.7/site-packages/neutron',
               'ref': 'refs/changes/89/249389/1', }
              ]


# default heat config
network_ucsm_ip = 127.0.0.1
network_ucsm_username = admin
network_ucsm_password = password
network_ucsm_host_list = mac1:profile1, mac2:profile2
network_nexus_config = {}
network_nexus_managed_physical_network = datacentre
network_nexus_vlan_name_prefix = q-
network_nexus_svi_round_robin = false
network_nexus_provider_vlan_name_prefix = p-
network_nexus_persistent_switch_config = false
network_nexus_switch_heartbeat_time = 0
network_nexus_switch_replay_count = 3
network_nexus_provider_vlan_auto_create = true
network_nexus_provider_vlan_auto_trunk = true
network_nexus_vxlan_global_config = false
network_nexus_host_key_checks = false

network_nexus_vlan_range = datacentre:3010:3250

# which NICs to use on the overcloud
neutron_private_nic = nic1
neutron_public_nic = nic2
hypervisor_neutron_public_nic = nic1

nfs_for_storage = True
deploy_with_flavors = True
deploy_with_flavors_args = --control-flavor control --compute-flavor compute
deploy_extra_args =


# undercloud network
undercloud_local_ip_simple = 192.0.2.1
undercloud_local_ip = %(undercloud_local_ip_simple)s/24
undercloud_masquerade_network = 192.0.2.0/24
undercloud_dhcp_start = 192.0.2.4
undercloud_dhcp_end = 192.0.2.99
undercloud_network_cidr = 192.0.2.0/24
undercloud_network_gateway = 192.0.2.1
undercloud_discovery_iprange = 192.0.2.100,192.0.2.120
undercloud_public_vip = 192.0.2.2
undercloud_admin_vip = 192.0.2.3

# TODO add doc describing the difference between single and multi nic

;# single NIC
;network_isolation = false
;neutron_flat_networks = datacentre
;neutron_bridge_mappings = datacentre:br-ex
;overcloud_external_net_bridge = br-ex
;hypervisor_neutron_physical_bridge = br-ex
;ext_net_network = datacentre

network_isolation = true

# multi NIC:
neutron_flat_networks = datacentre,external
neutron_bridge_mappings = datacentre:br-vlan,external:br-ex
overcloud_external_net_bridge = ''
hypervisor_neutron_physical_bridge = br-vlan
ext_net_network = external


# You will need the following properties:

# Example (use the same ip range for external IPs and floating):
;overcloud_external_ip_cidr = 10.23.228.48/28
;overcloud_external_ip_start = 10.23.228.52
;overcloud_external_ip_end = 10.23.228.56
;overcloud_external_gateway = 10.23.228.49
;
# native vlan must be set
overcloud_floating_ip_cidr = 10.0.21.0/24
overcloud_floating_ip_start = 10.0.21.2
overcloud_floating_ip_end = 10.0.21.254
overcloud_floating_ip_network_gateway = 10.0.21.1


# this props are not longer used?
# TODO: remove them
compute_bridge_nic = nic1
controller_external_nic = nic1
controller_internal_nic = nic1

#example step, used for printing vars
[example]

[switch_config]

[cobbler]

[rhel_unregister]
playbook = rhel-unregister.yml
ignore_errors = true

[redeploy]
playbook = overcloud-redeploy.yml
node_discovery = False
deploy_undercloud = False

[test_cloud]
playbook = test-cloud.yml

[ansible]
playbook = osp-director.yml

