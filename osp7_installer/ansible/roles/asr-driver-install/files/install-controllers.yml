---
- hosts: controllers
  become: yes
  become_method: sudo
  vars:
    ws: ws
    neutron_branch: asr1k-stable-kilo
    asr_username:
    asr_password:
    asr1_ip:
    asr2_ip:
    asr1_internal_intf:
    asr1_external_intf:
    asr2_internal_intf:
    asr2_external_intf:
    network_nexus_vlan_range:

  tasks:
    - name: Create workspace directory
      file: path=/opt/ws state=directory mode="u=rwx,g=rwx,o=rwx"

    - name: Clone Cisco neutron
      git: repo=https://github.com/CiscoSystems/neutron.git
           dest=/opt/ws/neutron
           version={{neutron_branch}}
           force=yes

    - name: Clone Cisco client with ASR Commands
      git: repo=https://github.com/CiscoSystems/python-neutronclient.git
           dest=/opt/ws/python-neutronclient
           version={{neutron_branch}}
           force=yes

    - name: Install pip via easy_install
      easy_install: name=pip

    - name: Install PBR
      pip: name=pbr state=present

    # This should be removed at some point after ciscoconfparse is removed
    # from the ASR code base.
    - name: Install ciscoconfparse
      pip: name=ciscoconfparse state=present

    - name: Stat /usr/lib/python2.7/site-packages/neutron
      stat: path=/usr/lib/python2.7/site-packages/neutron
      register: py27_neutron_package_stat

    - name: Remove old neutron site package
      file: path=/usr/lib/python2.7/site-packages/neutron
            state=absent
      when: py27_neutron_package_stat.stat.exists

    - name: Install Python-neutronclient
      command: python setup.py install
      args:
        chdir: /opt/ws/python-neutronclient

    - name: Build Neutron
      command: python setup.py build
      args:
        chdir: /opt/ws/neutron

    - name: Install Neutron
      command: python setup.py install
      args:
        chdir: /opt/ws/neutron

    - name: Stat neutron.conf
      stat: path=/etc/neutron/neutron.conf
      register: neutron_conf_stat

    - name: Backup neutron.conf
      command: cp /etc/neutron/neutron.conf /etc/neutron/neutron.conf.bak
      when: neutron_conf_stat.stat.exists

    - name: Update api_workers in neutron.conf
      lineinfile: dest=/etc/neutron/neutron.conf regexp="^api_workers = " line="api_workers = 0"
      when: neutron_conf_stat.stat.exists

    - name: Update rpc_workers in neutron.conf
      lineinfile: dest=/etc/neutron/neutron.conf regexp="^rpc_workers = " line="rpc_workers = 0"
      when: neutron_conf_stat.stat.exists

    - name: Update service_plugins in neutron.conf
      lineinfile: dest=/etc/neutron/neutron.conf regexp="^service_plugins =" line="service_plugins = neutron.plugins.cisco.service_plugins.cisco_device_manager_plugin.CiscoDeviceManagerPlugin,neutron.plugins.cisco.service_plugins.cisco_router_plugin.CiscoRouterPlugin"
      when: neutron_conf_stat.stat.exists

    - name: Stat plugin.ini
      stat: path=/etc/neutron/plugin.ini
      register: neutron_plugin_ini_stat

    - name: Backup plugin.ini
      command: cp /etc/neutron/plugin.ini /etc/neutron/plugin.ini.bak
      when: neutron_plugin_ini_stat.stat.exists

    - name: Remove pointer to ml2_plugin
      file: path=/etc/neutron/plugin.ini state=absent

    - name: Copy plugin.ini over
      command: cp /etc/neutron/plugin.ini.bak /etc/neutron/plugin.ini

    - name: Stat plugin.ini
      stat: path=/etc/neutron/plugin.ini
      register: neutron_plugin_ini_stat

    - name: Set permissions on plugin.ini
      file: path=/etc/neutron/plugin.ini state=file mode="u=rwx,g=rwx,o=rwx"

    - name: Update plugin.ini
      ini_file: dest=/etc/neutron/plugin.ini
                section=ml2
                option=mechanism_drivers
                value=openvswitch,linuxbridge
      when: neutron_plugin_ini_stat.stat.exists

    - name: Update plugin.ini
      ini_file: dest=/etc/neutron/plugin.ini
                section=ml2_type_flat
                option=flat_networks
                value=datacentre,external
      when: neutron_plugin_ini_stat.stat.exists

    - name: Update plugin.ini
      ini_file: dest=/etc/neutron/plugin.ini
                section=ml2_type_vlan
                option=network_vlan_ranges
                value={{ network_nexus_vlan_range }}
      when: neutron_plugin_ini_stat.stat.exists

    ############################################################################
    # Create a /etc/neutron/plugins/cisco directory
    - name: Create directory /etc/neutron/plugins/cisco
      file: path=/etc/neutron/plugins/cisco state=directory mode="u=rwx,g=rwx,o=rwx"

    - name: Stat cisco_device_manager_plugin.ini
      stat: path=/opt/ws/neutron/cfg_samples/cisco/cisco_device_manager_plugin.ini
      register: cisco_device_manager_plugin_stat

    - name: Copy cisco_device_manager_plugin.ini to /etc/neutron
      command: cp  /opt/ws/neutron/cfg_samples/cisco/cisco_device_manager_plugin.ini /etc/neutron/plugins/cisco
      when: cisco_device_manager_plugin_stat.stat.exists

    - name: Set permissions on ini files /etc/neutron/plugins/cisco
      file: path=/etc/neutron/plugins/cisco/cisco_device_manager_plugin.ini
            mode="a+rwx"

    - name: Remove one of the general sections
      ini_file: dest=/etc/neutron/plugins/cisco/cisco_device_manager_plugin.ini
                section=general state=absent

    - name: Use Stingy scheduler
      ini_file: dest=/etc/neutron/plugins/cisco/cisco_device_manager_plugin.ini
                section=general
                option=configuration_agent_scheduler_driver
                value=neutron.plugins.cisco.device_manager.scheduler.hosting_device_cfg_agent_scheduler.StingyHostingDeviceCfgAgentScheduler
      when: cisco_device_manager_plugin_stat.stat.exists

    - name: Set l3_admin_tenant to admin
      ini_file: dest=/etc/neutron/plugins/cisco/cisco_device_manager_plugin.ini
                section=general
                option=l3_admin_tenant
                value=admin
      when: cisco_device_manager_plugin_stat.stat.exists

    - name: Add ASR Creds - user_name
      ini_file: dest=/etc/neutron/plugins/cisco/cisco_device_manager_plugin.ini
                section="cisco_hosting_device_credential:1"
                option=user_name value={{ asr_username }}
      when: cisco_device_manager_plugin_stat.stat.exists

    - name: Add ASR Creds - password
      ini_file: dest=/etc/neutron/plugins/cisco/cisco_device_manager_plugin.ini
                section="cisco_hosting_device_credential:1"
                option=password
                value={{ asr_password }}
      when: cisco_device_manager_plugin_stat.stat.exists

    - name: ASR1 Cisco hosting device - IP
      ini_file: dest=/etc/neutron/plugins/cisco/cisco_device_manager_plugin.ini
                section="cisco_hosting_device:3"
                option=management_ip_address
                value={{ asr1_ip }}
      when: cisco_device_manager_plugin_stat.stat.exists

    - name: ASR1 Internal net interface
      ini_file: dest=/etc/neutron/plugins/cisco/cisco_device_manager_plugin.ini
                section="HwVLANTrunkingPlugDriver:3"
                option=internal_net_interface_1
                value=*:{{ asr1_internal_intf }}
      when: cisco_device_manager_plugin_stat.stat.exists

    - name: ASR1 External net interface
      ini_file: dest=/etc/neutron/plugins/cisco/cisco_device_manager_plugin.ini
                section="HwVLANTrunkingPlugDriver:3"
                option=external_net_interface_1
                value=*:{{ asr1_external_intf }}
      when: cisco_device_manager_plugin_stat.stat.exists

    - name: ASR2 Cisco hosting device - IP
      ini_file: dest=/etc/neutron/plugins/cisco/cisco_device_manager_plugin.ini
                section="cisco_hosting_device:4"
                option=management_ip_address
                value={{ asr2_ip }}
      when: cisco_device_manager_plugin_stat.stat.exists

    - name: ASR2 Internal net interface
      ini_file: dest=/etc/neutron/plugins/cisco/cisco_device_manager_plugin.ini
                section="HwVLANTrunkingPlugDriver:4"
                option=internal_net_interface_1
                value=*:{{ asr2_internal_intf }}
      when: cisco_device_manager_plugin_stat.stat.exists

    - name: ASR2 External net interface
      ini_file: dest=/etc/neutron/plugins/cisco/cisco_device_manager_plugin.ini
                section="HwVLANTrunkingPlugDriver:4"
                option=external_net_interface_1
                value=*:{{ asr2_external_intf }}
      when: cisco_device_manager_plugin_stat.stat.exists


    ############################################################################
    - name: Stat cisco_router_plugin
      stat: path=/opt/ws/neutron/cfg_samples/cisco/cisco_router_plugin.ini
      register: cisco_router_plugin_stat

    - name: Copy cisco_router_plugin.ini to /etc/neutron
      command: cp /opt/ws/neutron/cfg_samples/cisco/cisco_router_plugin.ini /etc/neutron/plugins/cisco
      when: cisco_router_plugin_stat.stat.exists

    - name: Set permissions on ini files /etc/neutron/plugins/cisco
      file: path=/etc/neutron/plugins/cisco/cisco_router_plugin.ini
            mode="a+rwx"

    # This is needed because the template cisco_router_plugin.ini
    # didn't have this section.  Later when resetting the DB tables it
    # causes problems if this section is missing even though we don't use it.
    - name: Add cisco_router_type:2 to cisco_router_plugin.ini
      ini_file: dest=/etc/neutron/plugins/cisco/cisco_router_plugin.ini
                section="cisco_router_type:2" option="{{ item.option }}" value="{{ item.value }}"
      with_items:
       - { option: 'name', value: 'CSR1kv_router' }
       - { option: 'description', value: 'Neutron-router-implemented-in-Cisco-CSR1kv-device' }
       - { option: 'template_id', value: '2' }
       - { option: 'ha_enabled_by_default', value: 'False' }
       - { option: 'shared', value: 'True' }
       - { option: 'slot_need', value: '10' }
       - { option: 'scheduler', value: 'neutron.plugins.cisco.l3.schedulers.l3_router_hosting_device_scheduler.L3RouterHostingDeviceLongestRunningScheduler' }
       - { option: 'driver', value: 'neutron.plugins.cisco.l3.drivers.noop_routertype_driver.NoopL3RouterDriver' }
       - { option: 'cfg_agent_service_helper', value: 'neutron.plugins.cisco.cfg_agent.service_helpers.routing_svc_helper.RoutingServiceHelper' }
       - { option: 'cfg_agent_driver', value: 'neutron.plugins.cisco.cfg_agent.device_drivers.csr1kv.csr1kv_routing_driver.CSR1kvRoutingDriver' }


    ############################################################################
    - name: Stat cisco_cfg_agent
      stat: path=/opt/ws/neutron/cfg_samples/cisco/cisco_cfg_agent.ini
      register: cisco_cfg_agent_stat

    - name: Turn on heartbeat
      ini_file: dest=/opt/ws/neutron/cfg_samples/cisco/cisco_cfg_agent.ini
                section=DEFAULT
                option=enable_heartbeat
                value=True

    - name: Copy cisco_cfg_agent.ini to /etc/neutron
      command: cp  /opt/ws/neutron/cfg_samples/cisco/cisco_cfg_agent.ini /etc/neutron/plugins/cisco
      when: cisco_cfg_agent_stat.stat.exists

    - name: Set permissions on ini files /etc/neutron/plugins/cisco
      file: path=/etc/neutron/plugins/cisco/cisco_cfg_agent.ini
            mode="a+rwx"

    ############################################################################
    - name: Stat dhcp_agent.ini
      stat: path=/etc/neutron/dhcp_agent.ini
      register: neutron_dhcp_agent_ini_stat

    - name: Force DHCP metadata
      ini_file: dest=/etc/neutron/dhcp_agent.ini
                section=DEFAULT
                option=enable_isolated_metadata
                value=True
      when: neutron_dhcp_agent_ini_stat.stat.exists

   # Remove for now
   # - name: Force DHCP metadata
   #   ini_file: dest=/etc/neutron/dhcp_agent.ini
   #             section=DEFAULT
   #             option=force_metadata
   #             value=True
   #   when: neutron_dhcp_agent_ini_stat.stat.exists


    ########################################################
    - name: Stat neutron-cisco-cfg-agent
      stat: path=/opt/ws/neutron/cfg_samples/neutron-cisco-cfg-agent
      register: neutron_cisco_cfg_agent_stat

    - name: Copy neutron-cisco-cfg-agent to /usr/bin
      command: cp /opt/ws/neutron/cfg_samples/neutron-cisco-cfg-agent /usr/bin
      when: neutron_cisco_cfg_agent_stat.stat.exists

    - name: Set permissions on neutron-cisco-cfg-agent
      file: path=/usr/bin/neutron-cisco-cfg-agent
            mode="a+rwx"

    #########################################################
    - name: Stat neutron-cisco-cfg-agent.service
      stat: path=/opt/ws/neutron/cfg_samples/neutron-cisco-cfg-agent.service
      register: cfg_agent_service_stat

    - name: Copy neutron-cisco-cfg-agent.service to /usr/lib/systemd/system
      command: cp /opt/ws/neutron/cfg_samples/neutron-cisco-cfg-agent.service /usr/lib/systemd/system
      when: cfg_agent_service_stat.stat.exists

    - name: Daemon-reload for neutron-cisco-cfg-agent.service
      shell: systemctl daemon-reload

    - name: Check neutron-cisco-cfg-agent.service
      service: name=neutron-cisco-cfg-agent.service state=started

    ##########################################################
    - name: Stat neutron-server.serivce
      stat: path=/opt/ws/neutron/cfg_samples/neutron-server.service
      register: neutron_server_service_stat

    - name: Copy neutron-server.service to /usr/lib/systemd/system
      command: cp /opt/ws/neutron/cfg_samples/neutron-server.service /usr/lib/systemd/system
      when: neutron_server_service_stat.stat.exists
