- name: install libffi-devel, git and other useful tools
  yum: name={{ item.name }}
  with_items:
    - { name: "libffi-devel" }
    - { name: "wget" }
    - { name: "git" }
    - { name: "vim" }
    - { name: "bash-completion" }
    - { name: "python-devel" }
    - { name: "openssl-devel" }
    - { name: "screen" }


- name:
  shell: rm -rf {{ item }}
  with_items: "{{ tempest_dir }}"

- name: Create directory
  file: path="{{ tempest_dir }}" state=directory

- name: Clone cisco-openstack
  git: repo=https://github.com/{{ tempest_repo }}/tempest.git
       dest={{ tempest_dir }}/tempest
       version={{ tempest_branch }}


- name: copy etc folder
  shell: yes | cp -rf /etc/redhat-certification-openstack/* {{ tempest_dir }}/tempest/etc/

- name: copy cirros image to the etc folder
  shell: cp /usr/share/openstack-tempest-kilo/etc/cirros-0.3.1-x86_64-disk.img {{ tempest_dir }}/tempest/etc/

- name: Install pip
  easy_install: name=pip

- name: install tox
  shell: pip install tox virtualenv

- name: Create venv
  shell: cd {{ tempest_dir }}/tempest && tox -efull --notest

- name: install pip libs
  shell: source .tox/full/bin/activate && pip install junitxml
          chdir={{ tempest_dir }}/tempest/

- debug: var=test_names

- name: Execute tests
  shell: source .tox/full/bin/activate && testr init && testr run  --parallel --concurrency 1 {{ test_names }}
        chdir={{ tempest_dir }}/tempest/
  when: test_names is defined
  ignore_errors: yes

- name: Pause for 1 minutes to let system finish
  pause: minutes=1

- name: Generate a report
  shell: source .tox/full/bin/activate && testr last --subunit | subunit-1to2 | subunit2junitxml --output-to=tempest_results.xml
        chdir={{ tempest_dir }}/tempest/
  when: test_names is defined
  ignore_errors: yes

- name: Upload report to workspace node
  fetch: src={{ tempest_dir }}/tempest/tempest_results.xml dest={{ lookup('env','WORKSPACE') }}/files/
        flat=yes
  when: test_names is defined

- name: Generate a report in CSV format
  shell: source .tox/full/bin/activate && testr last --subunit | subunit-1to2 | subunit2csv --output-to=tempest_results.csv
        chdir={{ tempest_dir }}/tempest/
  when: test_names is defined
  ignore_errors: yes

- name: delete unused lines
  shell:  sed "/^[^\"]/d" -i tempest_results.csv
           chdir={{ tempest_dir }}/tempest/
  when: test_names is defined
  ignore_errors: yes

- name: download logstash
  get_url: url=http://172.29.173.233/nightly/osp7/logstash-2.1.1.tar.gz dest={{ tempest_dir }} force=true

- name: unpack logstash
  shell: tar -xzvf logstash-2.1.1.tar.gz
        chdir={{ tempest_dir }}

- name:  Write logstash.conf
  template: src=logstash.conf dest={{ tempest_dir }}/logstash-2.1.1/bin/logstash.conf owner=stack group=stack

- name: install java
  yum: name={{ item.name }}
  with_items:
    - { name: "java" }

- name: start service to upload results
  shell: ./logstash -f logstash.conf -w 1
        chdir={{ tempest_dir }}/logstash-2.1.1/bin/
  async: 200
  poll: 50
  ignore_errors: yes