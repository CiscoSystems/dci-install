resource_registry:
  OS::TripleO::AllNodesExtraConfig: /usr/share/openstack-tripleo-heat-templates/puppet/extraconfig/all_nodes/neutron-ml2-cisco-nexus-ucsm.yaml
  OS::TripleO::Compute::Net::SoftwareConfig: /usr/share/openstack-tripleo-heat-templates/net-config-bridge.yaml

parameter_defaults:
  NetworkUCSMIp: '{{ network_ucsm_ip }}'
  NetworkUCSMUsername: '{{ network_ucsm_username }}'
  NetworkUCSMPassword: '{{ network_ucsm_password }}'
  NetworkUCSMHostList: '{{ network_ucsm_host_list }}'
  NetworkNexusConfig: {{ network_nexus_config|to_nice_json }}

  NetworkNexusManagedPhysicalNetwork: {{ network_nexus_managed_physical_network }}
  NetworkNexusVlanNamePrefix: '{{ network_nexus_vlan_name_prefix }}'
  NetworkNexusSviRoundRobin: '{{ network_nexus_svi_round_robin|to_json }}'
  NetworkNexusProviderVlanNamePrefix: '{{ network_nexus_provider_vlan_name_prefix }}'
  NetworkNexusPersistentSwitchConfig: '{{ network_nexus_persistent_switch_config|to_json }}'
  NetworkNexusSwitchHeartbeatTime: {{ network_nexus_switch_heartbeat_time }}
  NetworkNexusSwitchReplayCount: {{ network_nexus_switch_replay_count }}
  NetworkNexusProviderVlanAutoCreate: '{{ network_nexus_provider_vlan_auto_create|to_json }}'
  NetworkNexusProviderVlanAutoTrunk: '{{ network_nexus_rovider_vlan_auto_trunk|to_json }}'
  NetworkNexusVxlanGlobalConfig: '{{ network_nexus_vxlan_global_config|to_json }}'
  NetworkNexusHostKeyChecks: '{{ network_nexus_host_key_checks|to_json }}'
  NeutronNetworkVLANRanges: '{{ network_nexus_vlan_range }}'

  NeutronMechanismDrivers: '{{ neutron_mechanism_drivers }}'
  NetworkNexusVxlanVniRanges: '0:0'
  NetworkNexusVxlanMcastRanges: '0.0.0.0:0.0.0.0'

parameters:
  controllerExtraConfig:
    neutron::server::api_workers: 0
    neutron::agents::metadata::metadata_workers: 0
    neutron::server::rpc_workers: 0

#  ###
#  # TODO: Might want to split these out into a seperate storage file (so we could test multiple storage options)
#  ###
#
  ## Whether to enable iscsi backend for Cinder.
  CinderEnableIscsiBackend: false
  ## Whether to enable rbd (Ceph) backend for Cinder.
  # CinderEnableRbdBackend: false
  ## Whether to enable NFS backend for Cinder.
  CinderEnableNfsBackend: true
  ## Whether to enable rbd (Ceph) backend for Nova ephemeral storage.
  # NovaEnableRbdBackend: false
  ## Glance backend can be either 'rbd' (Ceph), 'swift' or 'file'.
  GlanceBackend: file

  #### CINDER NFS SETTINGS ####
  ## NFS mount options
  CinderNfsMountOptions: 'retry=1'
  ## NFS mount point, e.g. '192.168.122.1:/export/cinder'
  CinderNfsServers: {{ undercloud_local_ip_simple }}:/export/cinder

  #### GLANCE FILE BACKEND PACEMAKER SETTINGS (used for mounting NFS) ####
  ## Whether to make Glance 'file' backend a mount managed by Pacemaker
  GlanceFilePcmkManage: true
  ## File system type of the mount
  # GlanceFilePcmkFstype: nfs
  ## Pacemaker mount point, e.g. '192.168.122.1:/export/glance' for NFS
  GlanceFilePcmkDevice: {{ undercloud_local_ip_simple }}:/export/glance
  ## Options for the mount managed by Pacemaker
  GlanceFilePcmkOptions: 'context=system_u:object_r:glance_var_lib_t:s0'