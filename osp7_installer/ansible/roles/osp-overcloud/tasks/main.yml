---

- name: Make templates dir
  sudo_user: stack
  file: path=/home/stack/templates state=directory mode=0755

#- name: Check existing heat templates
#  stat: path=/home/stack/templates/nic-configs
#  register: nic_templates
#
#- name: Copy default heat templates
#  sudo_user: stack
#  shell: cp -r /usr/share/openstack-tripleo-heat-templates/network/config/single-nic-vlans /home/stack/templates/nic-configs
#  when: nic_templates.stat.isdir is not defined

#- name:  Write {{ item.template_file }}
#  template: src={{ item.template_file }} dest=/home/stack/templates/nic-configs/{{ item.template_file }} owner=stack group=stack
#  with_items:
#    - { template_file: 'controller.yaml' }
#    - { template_file: 'compute.yaml' }

- name:  Write environment files
  template: src={{ item.template_file }} dest=/home/stack/templates/{{ item.template_file }} owner=stack group=stack
  with_items:
#    - { template_file: 'network-environment.yaml' }
    - { template_file: 'networking-cisco-environment.yaml' }

###
# Heat Review
###
- name: Check if heat review checked out
  stat: path=/home/stack/heat-review
  register: heat_review

- name: Checkout heat review patches
  sudo_user: stack
  shell: >
        mkdir -p /home/stack/heat-review &&
        mkdir /home/stack/heat-review/{{ item.number }} &&
        cd /home/stack/heat-review/{{ item.number }} &&
        git init &&
        git fetch https://review.openstack.org/openstack/tripleo-heat-templates {{ item.ref }} &&
        git checkout FETCH_HEAD &&
        git format-patch -n HEAD^ --no-prefix --stdout > /home/stack/{{ item.patch_file }}
  with_items:
    - { number: "1", patch_file: 'heat-review-1.patch', ref: "{{ heat_templates_ref_1 }}" }
#    - { number: "2", patch_file: 'heat-review-2.patch', ref: "{{ heat_templates_ref_2 }}" }
#    - { number: "3", patch_file: 'heat-review-3.patch', ref: "{{ heat_templates_ref_3 }}" }
#    - { number: "4", patch_file: 'heat-review-4.patch', ref: "{{ heat_templates_ref_4 }}" }
#    - { number: "5", patch_file: 'heat-review-5.patch', ref: "{{ heat_templates_ref_5 }}" }
  when: heat_review.stat.isdir is not defined

- name:  Write heat-hack.patch
  template: src=heat-hack.patch dest=/home/stack/heat-hack.patch owner=stack group=stack

- name: Check for heat backup
  stat: path=/usr/share/openstack-tripleo-heat-templates.bak
  register: heat_backup

- name: Backup heat templates
  shell: cp -R /usr/share/openstack-tripleo-heat-templates /usr/share/openstack-tripleo-heat-templates.bak
  register: template_backup
  when: heat_backup.stat.isdir is not defined

- name: Patch heat templates
  shell: cd /usr/share/openstack-tripleo-heat-templates && patch -p0 < /home/stack/{{ item.patch_file }}
  with_items:
    - { patch_file: 'heat-review-1.patch' }
#    - { patch_file: 'heat-review-2.patch' }
#    - { patch_file: 'heat-review-3.patch' }
#    - { patch_file: 'heat-review-4.patch' }
#    - { patch_file: 'heat-review-5.patch' }
#    - { patch_file: 'heat-hack.patch' }
  when: not template_backup|skipped


###
# Deploy Overcloud
###

- name: Check for existing overcloud
  sudo_user: stack
  shell: source /home/stack/stackrc &&  heat stack-list | grep -q overcloud
  ignore_errors: true
  register: exiting_cloud_check

- name: Install overcloud
  sudo_user: stack
  shell: >
        source /home/stack/stackrc &&
        cd /home/stack/ &&
        openstack overcloud deploy --templates
        --control-scale {{ overcloud_control_scale }}
        --compute-scale {{ overcloud_compute_scale }}
        --ceph-storage-scale {{ overcloud_ceph_storage_scale }}
        --block-storage-scale {{ overcloud_block_storage_scale }}
        --swift-storage-scale {{ overcloud_swift_storage_scale }}
        --neutron-network-type vlan
        --neutron-disable-tunneling
        --neutron-public-interface {{ neutron_public_nic }}
        --hypervisor-neutron-public-interface {{ hypervisor_neutron_public_nic }}
        -e /usr/share/openstack-tripleo-heat-templates/overcloud-resource-registry-puppet.yaml
        -e /home/stack/templates/networking-cisco-environment.yaml
        --neutron-tunnel-type vlan
        --neutron-network-vlan-ranges {{ network_nexus_vlan_range }}
        --ntp-server 1.ntp.esl.cisco.com
  # up to 2 hours poll every minute
  async: 7200
  poll: 60
  when: deploy_overcloud and exiting_cloud_check|failed

# Create external network

- name: Create ext-net
  sudo_user: stack
  shell: >
        source /home/stack/overcloudrc &&
        neutron net-list |
        grep -q ext-net ||
        neutron net-create ext-net
        --router:external=True
        --provider:physical_network datacentre
        --provider:network_type vlan
        --provider:segmentation_id {{ overcloud_vlan }}

- name: Create ext-subnet
  sudo_user: stack
  shell: >
        source /home/stack/overcloudrc &&
        neutron subnet-list |
        grep -q ext-subnet ||
        neutron subnet-create
        --name ext-subnet
        --allocation-pool start={{ overcloud_floating_ip_start }},end={{ overcloud_floating_ip_end }}
        --gateway={{ overcloud_bm_network_gateway }}
        ext-net {{ overcloud_floating_ip_cidr }}

- name: Find Overcloud Connection Properties (OS_AUTH_URL)
  shell: "source /home/stack/overcloudrc && echo ${OS_AUTH_URL}"
  register: OS_AUTH_URL

- name: Find Overcloud Connection Properties (OS_PASSWORD)
  shell: "source /home/stack/overcloudrc && echo ${OS_PASSWORD}"
  register: OS_PASSWORD

- name: Set Overcloud Connection Variables
  set_fact:
    overcloud_os_auth_url: "{{ OS_AUTH_URL['stdout'] }}"
    overcloud_os_admin_password: "{{ OS_PASSWORD['stdout'] }}"